{
    "workbench.colorTheme": "GitHub Dark",
    "editor.linkedEditing": true,
    "editor.minimap.enabled": false,
    "svelte.enable-ts-plugin": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "prettier.tabWidth": 4,
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "prettier.jsxSingleQuote": true,
    "prettier.singleQuote": true,
    "explorer.compactFolders": false,
    "prettier.arrowParens": "avoid",
    "editor.fontFamily": "'Fira Code',Consolas, 'Courier New', monospace",
    "editor.fontSize": 15,
    "editor.fontVariations": false,
    "editor.fontWeight": 400,
    "editor.fontLigatures": true,
    "prettier.printWidth": 100,
    "vscode-neovim.neovimExecutablePaths.win32": "C:\\Program Files\\Neovim\\bin\\nvim.exe",
    "redhat.telemetry.enabled": false,
    "workbench.iconTheme": "material-icon-theme",
    "zenMode.hideLineNumbers": false,
    "zenMode.hideTabs": false,
    "editor.lineNumbers": "relative",

    "vim.leader": "<Space>",
    "vim.hlsearch": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        // NAVIGATION
        // switch b/w buffers
        { "before": ["<S-h>"], "commands": [":bprevious"] },
        { "before": ["<S-l>"], "commands": [":bnext"] },

        // splits
        { "before": ["leader", "v"], "commands": [":vsplit"] },
        { "before": ["leader", "s"], "commands": [":split"] },

        // panes
        {
            "before": ["leader", "h"],
            "commands": ["workbench.action.focusLeftGroup"]
        },
        {
            "before": ["leader", "j"],
            "commands": ["workbench.action.focusBelowGroup"]
        },
        {
            "before": ["leader", "k"],
            "commands": ["workbench.action.focusAboveGroup"]
        },

        {
            "before": ["leader", "l"],
            "commands": ["workbench.action.focusRightGroup"]
        },
        // NICE TO HAVE
        { "before": ["leader", "w"], "commands": [":w!"] },
        { "before": ["leader", "q"], "commands": [":q!"] },
        { "before": ["leader", "x"], "commands": [":x!"] },
        {
            "before": ["leader", "e", "p"],
            "commands": ["editor.action.marker.prev"]
        },
        {
            "before": ["leader", "e", "n"],
            "commands": ["editor.action.marker.next"]
        },
        {
            "before": ["<leader>", "c", "a"],
            "commands": ["editor.action.quickFix"]
        },
        { "before": ["leader", "p", "f"], "commands": ["workbench.action.quickOpen"] },
        { "before": ["leader", "p", "p"], "commands": ["workbench.action.showCommands"] },
        { "before": ["leader", "f"], "commands": ["editor.action.formatDocument"] },
        {
            "before": ["g", "h"],
            "commands": ["editor.action.showDefinitionPreviewHover"]
        }
    ],
    "vim.visualModeKeyBindings": [
        // Stay in visual mode while indenting
        { "before": ["<"], "commands": ["editor.action.outdentLines"] },
        { "before": [">"], "commands": ["editor.action.indentLines"] },
        // Move selected lines while staying in visual mode
        { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
        { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
        // toggle comment selection
        { "before": ["leader", "c"], "commands": ["editor.action.commentLine"] }
    ],
    "vim.insertModeKeyBindings": [
        //move cursor
        { "before": ["<C-h>"], "commands": ["cursorLeft"] },
        { "before": ["<C-l>"], "commands": ["cursorRight"] },
        { "before": ["<C-k>"], "commands": ["cursorUp"] },
        { "before": ["<C-j>"], "commands": ["cursorDown"] }
    ],
    "liveServer.settings.donotShowInfoMsg": true,
    "yaml.customTags": [
        "!And",
        "!And sequence",
        "!If",
        "!If sequence",
        "!Not",
        "!Not sequence",
        "!Equals",
        "!Equals sequence",
        "!Or",
        "!Or sequence",
        "!FindInMap",
        "!FindInMap sequence",
        "!Base64",
        "!Join",
        "!Join sequence",
        "!Cidr",
        "!Ref",
        "!Sub",
        "!Sub sequence",
        "!GetAtt",
        "!GetAZs",
        "!ImportValue",
        "!ImportValue sequence",
        "!Select",
        "!Select sequence",
        "!Split",
        "!Split sequence"
    ],
    "aws.suppressPrompts": {
        "codeWhispererNewWelcomeMessage": true
    },
    "typescript.updateImportsOnFileMove.enabled": "never",
    "[astro]": {
        "editor.defaultFormatter": "astro-build.astro-vscode"
    },
    "git.autofetch": true
}